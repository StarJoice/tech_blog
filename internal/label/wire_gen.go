// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package label

import (
	"github.com/StarJoice/tech_blog/internal/label/repository"
	"github.com/StarJoice/tech_blog/internal/label/repository/dao"
	"github.com/StarJoice/tech_blog/internal/label/service"
	"github.com/StarJoice/tech_blog/internal/label/web"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB) (*Module, error) {
	labelDao := InitDao(db)
	repositoryRepository := repository.NewLabelRepository(labelDao)
	serviceService := service.NewLabelService(repositoryRepository)
	handler := web.NewHandler(serviceService)
	module := &Module{
		Hdl: handler,
	}
	return module, nil
}

// wire.go:

func InitDao(db *egorm.Component) dao.LabelDao {
	err := dao.InitTable(db)
	if err != nil {
		panic(err)
	}
	return dao.NewLabelGormDao(db)
}

var ProviderSet = wire.NewSet(web.NewHandler, service.NewLabelService, repository.NewLabelRepository, InitDao)
