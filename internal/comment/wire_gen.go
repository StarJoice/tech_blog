// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package comment

import (
	"github.com/StarJoice/tech_blog/internal/comment/internal/repository"
	"github.com/StarJoice/tech_blog/internal/comment/internal/repository/dao"
	"github.com/StarJoice/tech_blog/internal/comment/internal/service"
	"github.com/StarJoice/tech_blog/internal/comment/internal/web"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB) (*Module, error) {
	commentDao := InitDao(db)
	repositoryRepository := repository.NewCommentRepository(commentDao)
	serviceService := service.NewCommentService(repositoryRepository)
	handler := web.NewHandler(serviceService)
	module := &Module{
		Svc: serviceService,
		Hdl: handler,
	}
	return module, nil
}

// wire.go:

var ProviderSet = wire.NewSet(web.NewHandler, service.NewCommentService, repository.NewCommentRepository, InitDao)

func InitDao(db *egorm.Component) dao.CommentDao {
	err := dao.InitTable(db)
	if err != nil {
		panic(err)
	}
	return dao.NewCommentDao(db)
}
